<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop.xsd
         http://www.springframework.org/schema/tx
          http://www.springframework.org/schema/tx/spring-tx.xsd
         http://www.springframework.org/schema/mvc
         http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    
    <context:property-placeholder location="classpath:sysConfig.properties" ignore-unresolvable="true"/>
	 
    <!--只扫描@Controller注解类,否则影响事务-->
    <context:component-scan base-package="com.jeetx.controller.*">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    
	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
				<value>text/json;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	
	<!-- ResponseBody返回字符串带双引号解决 -->
	<bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
	    <constructor-arg value="UTF-8" index="0"/>
	    <property name="supportedMediaTypes">
	        <list>
	            <value>text/plain;charset=UTF-8</value>
	        </list>
	    </property>
	</bean>
	
	<!-- 注册handler method和request的mapping关系。  -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射， 配置一个基于注解的定制的WebBindingInitializer，解决日期转换问题，方法级别的处理器映射 -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="cacheSeconds" value="0" />
		<property name="messageConverters">
			<list>
				<ref bean="stringHttpMessageConverter" /> <!--先进行string转换-->
				<ref bean="mappingJacksonHttpMessageConverter" /><!--进行json转换器 -->
			</list>
		</property>
	</bean>
	<!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
	<bean id="defaultViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:order="3">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="contentType" value="text/html" />
		<property name="prefix" value="/webpage/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" p:defaultEncoding="UTF-8">
		<property name="maxUploadSize">
			<value>104857600</value>
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>
	
	<!-- 异常处理类 -->
	<bean id="exceptionHandler" class="com.jeetx.common.exception.GlobalExceptionResolver" />
	
	<!-- 配置静态资源：default-servlet-handler将在SpringMVC上下文中定义DefaultServletHttpRequestHandler, 
		它会对进入DispatcherServlet的请求进行帅选，如果发现是没有经过映射的请求，就将该请求交由WEB应用服务器默认的 Servlet处理。如果不是静态资源的请求，才由DispatcherServlet继续处理。 -->
	<mvc:default-servlet-handler />
	<!-- 配置开启注解 -->
	<mvc:annotation-driven/>
	
	<!-- swagger静态文件路径 -->
	<mvc:resources mapping="/swagger/**" location="/swagger/" cache-period="31556926"/>
    <mvc:default-servlet-handler />
    <bean class="com.jeetx.common.swagger.SwaggerConfig" /> 
	
	<!-- 拦截器 -->
	<mvc:interceptors>
		<!-- 字符集拦截器  -->
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.jeetx.interceptors.EncodingInterceptor" />
		</mvc:interceptor>

		<!-- SQL注入拦截器  -->
        <mvc:interceptor>
            <mvc:mapping path="/**" />
            <bean class="com.jeetx.interceptors.SqlInjectInterceptor"></bean>
        </mvc:interceptor>
	</mvc:interceptors>
	
	<!-- Spring监控配置 -->
	<bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor"></bean>
	<bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">
		<property name="patterns">
			<list>
				<value>com.jeetx.service.*</value>
			</list>
		</property>
	</bean>
	<aop:config proxy-target-class="true">
		<aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut" />
	</aop:config>
</beans>